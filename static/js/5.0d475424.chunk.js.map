{"version":3,"sources":["utils/validators/validators.ts","components/Content/common/formsControls/FormsControl.tsx","components/Content/common/formsControls/FormControl.module.css","components/Content/Messages/Messages.module.css","components/Content/Messages/Message/Message.module.css","components/Content/Messages/Message/Message.tsx","components/Content/Messages/Message/MessageContainer.tsx","components/Content/Messages/NewMessageForm/NewMessageForm.tsx","components/Content/Messages/NewMessageForm/NewMessageFormContainer.tsx","components/Content/Messages/Messages.tsx"],"names":["requiredField","value","maxLengthCreator","maxLength","length","TextArea","input","meta","props","hasError","touched","error","className","s","formControl","Input","module","exports","Message","messageElement","messagesData","map","m","message","id","MessageContainer","connect","state","dialogsPage","dispatch","maxLength100","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","name","validate","NewMessage","formData","addMessageFormAC","newMessageText","MDTP","NewMessageFormContainer","compose","NewMessageForm","Messages","messages"],"mappings":"0GAAA,oEAAO,IAAMA,EAAgB,SAACC,GAC5B,IAAMA,EACN,MAAO,qBAGIC,EAAmB,SAACC,GAAD,OAAuB,SAACF,GACtD,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,+LCF5BE,EAAW,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAASC,EAAgB,iBAElDC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UACE,8BACE,oDAAcL,GAAWE,MAE3B,8BACGC,GAAY,+BAAOF,EAAKI,cAMpBI,EAAQ,SAAC,GAAkC,IAAjCT,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAASC,EAAgB,iBAE/CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,uBAAMC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA7D,UACE,+BACE,iDAAWL,GAAWE,MAExB,+BACGC,GAAY,+BAAOF,EAAKI,e,oBC3BjCK,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,SAAW,gC,oBCA/GD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,oGCmBbC,EAhBC,SAACV,GAEb,IAAIW,EAAiBX,EAAMY,aAAaC,KAAI,SAAAC,GAAC,OACzC,sBAAgBV,UAAWC,IAAEU,QAA7B,UACI,8BAAMD,EAAEC,UACR,8BAAMD,EAAEE,OAFFF,EAAEE,OAMhB,OACI,8BACKL,KCaAM,EAAmBC,aAVR,SAACC,GACrB,MAAO,CACHP,aAAcO,EAAMC,YAAYR,iBAIb,SAACS,GACxB,MAAO,KAGqBH,CAA6CR,G,oDCnBvEY,EAAe5B,YAAiB,KAkBzB6B,EAAsBC,YAAU,CAC3CC,KAAM,cAD2BD,EAhBZ,SAACxB,GACtB,OAAO,uBAAM0B,SAAU1B,EAAM2B,aAAtB,UACL,8BACE,cAACC,EAAA,EAAD,CACEC,YAAa,qBACbC,UAAWjC,IACXkC,KAAM,iBACNC,SAAU,CAACxC,IAAe8B,OAG9B,8BACE,mEAuBSW,EAbI,SAACjC,GAKlB,OACE,gCACE,4CACA,cAACuB,EAAD,CAAqBG,SAPR,SAACQ,GAChBlC,EAAMmC,iBAAiBD,EAASE,uBCtBhCC,EAAiB,CACnBF,sBAGWG,EAA0BC,YACrCrB,YAAQ,KAAMmB,GADuBE,CAErCC,GCDaC,UAVE,WACf,OACE,sBAAKrC,UAAWC,IAAEqC,SAAlB,UAEE,cAACJ,EAAD,IACA,cAACrB,EAAD","file":"static/js/5.0d475424.chunk.js","sourcesContent":["export const requiredField = (value: any) => {\r\n  if (!!value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\r\n  if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  return undefined\r\n}\r\n","import React from 'react'\r\nimport s from './FormControl.module.css'\r\n\r\n\r\nexport const TextArea = ({input, meta, ...props}: any) => {\r\n\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n      <div>\r\n        <textarea {...input} {...props}/>\r\n      </div>\r\n      <div>\r\n        {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <span className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n      <span>\r\n        <input {...input} {...props}/>\r\n      </span>\r\n      <span>\r\n        {hasError && <span>{meta.error}</span>}\r\n      </span>\r\n    </span>\r\n  )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__3e3nq\",\"error\":\"FormControl_error__2SLj3\",\"checkBox\":\"FormControl_checkBox__2VBSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__1kczP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__M_vMp\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport {MessagePropsType} from \"./MessageContainer\";\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n\r\n    let messageElement = props.messagesData.map(m =>\r\n        <div key={m.id} className={s.message}>\r\n            <div>{m.message}</div>\r\n            <div>{m.id}</div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {messageElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport {MessagesDataArray} from \"../../../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Message from \"./Message\";\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\"\r\n\r\n//Типизируем мап то пропс\r\ntype MSTPPropsType = {\r\n    messagesData: Array<MessagesDataArray>\r\n};\r\n\r\n//тиизируем диспатч то пропс\r\ntype MDTPPropsType = {};\r\n\r\n//объединяем тип\r\nexport type MessagePropsType = MSTPPropsType & MDTPPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MSTPPropsType => {\r\n    return {\r\n        messagesData: state.dialogsPage.messagesData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MDTPPropsType => {\r\n    return {}\r\n}\r\n\r\nexport const MessageContainer = connect(mapStateToProps, mapDispatchToProps)(Message)","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {NewMessagePropsType} from \"./NewMessageFormContainer\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField\r\n} from \"../../../../utils/validators/validators\";\r\nimport {TextArea} from '../../common/formsControls/FormsControl';\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst NewMessageForm = (props: any) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field\r\n        placeholder={'Enter your message'}\r\n        component={TextArea}\r\n        name={'newMessageText'}\r\n        validate={[requiredField, maxLength100]}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button>Add Message from FORM</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport const NewMessageReduxForm = reduxForm({\r\n  form: 'newMessage'\r\n})(NewMessageForm)\r\n\r\n\r\nconst NewMessage = (props: NewMessagePropsType) => {\r\n  const onSubmit = (formData: any) => {\r\n    props.addMessageFormAC(formData.newMessageText)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <b>New message</b>\r\n      <NewMessageReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default NewMessage\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\"\r\nimport {addMessageFormAC} from '../../../../redux/dialogsReducer'\r\nimport NewMessageForm from './NewMessageForm';\r\n\r\ntype MDTPType = {\r\n  addMessageFormAC: (newMessageText: string) => void\r\n}\r\n\r\nexport type NewMessagePropsType = MDTPType\r\n\r\nlet MDTP: MDTPType = {\r\n  addMessageFormAC\r\n}\r\n\r\nexport const NewMessageFormContainer = compose<React.ComponentType>(\r\n  connect(null, MDTP)\r\n)(NewMessageForm)\r\n","import React from 'react';\r\nimport s from './Messages.module.css';\r\nimport {MessageContainer} from \"./Message/MessageContainer\";\r\nimport {NewMessageFormContainer} from './NewMessageForm/NewMessageFormContainer';\r\nimport {NewMessageContainer} from './NewMessage/NewMessageContainer';\r\n\r\n\r\nconst Messages = () => {\r\n  return (\r\n    <div className={s.messages}>\r\n      {/*<NewMessageContainer/>*/}\r\n      <NewMessageFormContainer/>\r\n      <MessageContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Messages;\r\n"],"sourceRoot":""}