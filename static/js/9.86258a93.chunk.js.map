{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Content/common/hoc/AuthRedirectHOC.tsx","components/Content/Dialogs/Dialogs.module.css","components/Content/Dialogs/Dialogs.tsx","components/Content/Dialogs/DialogsContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","withAuthRedirectHOC","Component","connect","props","restProps","to","module","exports","Dialogs","dialogElement","dialogsData","map","d","className","s","dialog","id","name","dialogs","DialogsContainer","compose","dialogsPage","dispatch","withRouter"],"mappings":"0GACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,oKEmBHW,EAAkB,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAIhB,SAASE,EAAuBC,GAiBrC,OAFqCC,YAAQN,EAARM,EAbX,SAACC,GAGzB,IAAKL,EAAwBK,EAAxBL,OAAWM,EAAhB,YAA6BD,EAA7B,GAEA,OAAKL,EAKE,cAACG,EAAD,eAAeG,IAJb,cAAC,IAAD,CAAUC,GAAI,gB,oBCjD3BC,EAAOC,QAAU,CAAC,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,2B,4FCmB/EC,EAfC,SAACL,GAEf,IAAIM,EAAgBN,EAAMO,YAAYC,KAAI,SAAAC,GAAC,OACzC,qBAAgBC,UAAWC,IAAEC,OAA7B,SACE,eAAC,IAAD,CAASV,GAAI,YAAcO,EAAEI,GAA7B,cAAmCJ,EAAEK,KAArC,QADQL,EAAEI,OAKd,OACE,qBAAKH,UAAWC,IAAEI,QAAlB,SACGT,K,wBCeDU,EAAmBC,YACvBlB,aAXsB,SAACL,GACrB,MAAO,CACHa,YAAab,EAAMwB,YAAYX,gBAIZ,SAACY,GACxB,MAAO,MAKTC,IACAvB,IAHuBoB,CAIvBZ,GAEaW","file":"static/js/9.86258a93.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\n\r\n/*type MSTPType = {\r\n  isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MSTPType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirectHOC = (Component: any) => {\r\n\r\n  class RedirectComponent extends React.Component<any, any> {\r\n    render() {\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}*/\r\n\r\n\r\n/*=====================ФУНКЦИОНАЛЬНАЯ КОМПОНЕНТА С ТИПИЗАЦИЕЙ=====*/\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport function withAuthRedirectHOC<T>(Component: ComponentType<T>) {\r\n\r\n  const RedirectComponent = (props: MapStateToPropsType) => {\r\n\r\n    //деструктиризация пропсов чтобы отделать все пропсы и isAuth. чтобы не передавать isAuth дальше в компоненту\r\n    let {isAuth, ...restProps} = props\r\n\r\n    if (!isAuth) {\r\n      return <Redirect to={'/login'}/>\r\n    }\r\n    ;\r\n\r\n    return <Component {...restProps as T}/>\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialogs_dialog__3phNC\",\"active\":\"Dialogs_active__17FQq\",\"dialogs\":\"Dialogs_dialogs__3MYvG\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Dialogs.module.css';\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\n\r\nconst Dialogs = (props: DialogPropsType) => {\r\n\r\n  let dialogElement = props.dialogsData.map(d =>\r\n    <div key={d.id} className={s.dialog}>\r\n      <NavLink to={\"/dialogs/\" + d.id}> {d.name} </NavLink>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      {dialogElement}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {DialogsDataArray} from \"../../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\"\r\nimport {withAuthRedirectHOC} from \"../common/hoc/AuthRedirectHOC\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n//Типизируем мап то пропс\r\ntype MSTPPropsType = {\r\n    dialogsData: Array<DialogsDataArray>\r\n};\r\n\r\n//тиизируем диспатч то пропс\r\ntype MDTPPropsType = {};\r\n\r\n//объединяем тип\r\nexport type DialogPropsType = MSTPPropsType & MDTPPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MSTPPropsType => {\r\n    return {\r\n        dialogsData: state.dialogsPage.dialogsData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MDTPPropsType => {\r\n    return {}\r\n}\r\n\r\nconst DialogsContainer = compose<React.ComponentType>(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter,\r\n  withAuthRedirectHOC,\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n\r\n\r\n\r\n"],"sourceRoot":""}