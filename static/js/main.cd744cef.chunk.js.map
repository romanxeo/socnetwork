{"version":3,"sources":["components/Header/Center/Center.module.css","api/api.ts","redux/appReducer.ts","redux/redux-store.ts","components/Header/Center/logo.png","components/Header/Center/LoginBlock/LoginBlock.tsx","components/Header/Center/LoginBlock/LoginBlockContainer.tsx","components/Header/Center/Center.tsx","components/Header/Header.tsx","components/Content/Footer/Footer.tsx","components/Content/common/hoc/WithSuspenseHOC.tsx","components/Content/Content.tsx","App.tsx","index.tsx","redux/authReducer.ts","components/Content/Content.module.css","components/Header/Header.module.css","components/Header/Center/LoginBlock/LoginBlock.module.css","components/Content/common/preloader/Preloader.module.css","redux/profileReducer.ts","assets/preloaderNew.svg","components/Content/common/preloader/Preloader.tsx","redux/dialogsReducer.ts","utils/objectsHelpers.ts","redux/usersReducer.ts","components/Content/Footer/Footer.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","setInitializedAC","isInitialized","type","initialState","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","authReducer","app","state","action","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","LoginBlock","props","isAuth","onClick","className","s","bottom","id","to","MDTP","LoginBlockContainer","this","React","Component","connect","Center","center","src","logo","search","empty","users","profile","dialogs","feed","settings","colum","Header","head_wrap","left","right","Footer","footer","withSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","UsersContainer","Messages","Posts","Login","Content","content_wrap","top_left","path","render","top_center","bottom_left","initializeTC","dispatch","a","getAuthUserData","App","Preloader","ReactDOM","basename","process","document","getElementById","setAuthUserDataAC","payload","undefined","isFetching","resultCode","messages","length","stopSubmit","_error","addPostFormAC","newPostText","setStatusAC","toggleIsFetchingAC","postsData","v1","name","likesCount","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","photos","small","large","getUserProfileTC","getStatusTC","updateStatusTC","savePhotoTC","file","newPost","newText","filter","p","main","preloaderNew","preloader","alt","addMessageFormAC","newMessageText","dialogsData","messagesData","message","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","followSuccessAC","userID","unfollowSuccessAC","setCurrentPageAC","toggleFollowingProgressAC","followingProgress","usersData","totalUsersCount","getUsersTC","totalCount","followUnfollowFlow","apiMethod","actionCreator","unfollowTC","bind","followTC","followed"],"mappings":"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","file":"static/js/main.cd744cef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Center_center__2vapN\",\"search\":\"Center_search__jSCYI\",\"empty\":\"Center_empty__1cYfT\",\"users\":\"Center_users__auL43\",\"profile\":\"Center_profile__2O-12\",\"dialogs\":\"Center_dialogs__1A2JF\",\"feed\":\"Center_feed__1VS6h\",\"settings\":\"Center_settings__1Nr8B\",\"colum\":\"Center_colum__2l129\",\"avatarname\":\"Center_avatarname__1WSpH\",\"bottom\":\"Center_bottom__SKhJq\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': 'd683f2e5-a7af-46f3-9fb7-3906f227c671'\r\n  }\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage: number, pageSize: number) {\r\n    return instance.get(\r\n      `users?page=${currentPage}&count=${pageSize}`\r\n    ).then(response => {\r\n        return response.data\r\n      }\r\n    )\r\n  },\r\n\r\n  follow(userId: number) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n\r\n  unfollow(userId: number) {\r\n    return instance.delete(`follow/${userId}`);\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: string | null | undefined) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n\r\n  getStatus(userId: string | null | undefined) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n\r\n  updateStatus(status: string) {\r\n    return instance.put(`profile/status`, {status: status});\r\n  },\r\n\r\n  savePhoto(photoFile: any) {\r\n    let formData = new FormData();\r\n    formData.append('image', photoFile)\r\n\r\n    return instance.put('profile/photo', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n\r\n  login(email: string, password: string, rememberMe: boolean = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe});\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n}\r\n\r\n","import {Dispatch} from \"redux\"\r\nimport {getAuthUserData} from \"./authReducer\"\r\n\r\n// actions\r\nexport const setInitializedAC = (isInitialized: boolean) => {\r\n  return {type: 'APP/SET-INITIALIZED', isInitialized} as const\r\n}\r\n\r\n// types\r\nexport type setInitializedAT = ReturnType<typeof setInitializedAC>\r\n\r\ntype ActionsType = setInitializedAT\r\n\r\n//state\r\nconst initialState = {\r\n  initialized: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'APP/SET-INITIALIZED':\r\n      return {...state, initialized: action.isInitialized}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//thunk\r\nexport const initializeTC = (isInitialized: boolean) => async (dispatch: any) => {\r\n  await dispatch(getAuthUserData())\r\n  dispatch(setInitializedAC(isInitialized))\r\n}\r\n\r\n/*\r\n//thunk\r\nexport const initializeTC = (isInitialized: boolean) => {\r\n  return (dispatch: any) => {\r\n    dispatch(getAuthUserData())\r\n      .then(() => {\r\n        dispatch(setInitializedAC(isInitialized))\r\n      })\r\n  }\r\n}*/\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer} from \"./appReducer\";\r\n\r\n//комбинируем редюсеры\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\n//типизируем то что возвращает функция rootReducer\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//создаем стор\r\n//const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","export default __webpack_public_path__ + \"static/media/logo.9a7b0c0d.png\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './LoginBlock.module.css'\r\nimport {LoginBlockPropsType} from './LoginBlockContainer';\r\n\r\nconst LoginBlock = (props: LoginBlockPropsType) => {\r\n\r\n  return (\r\n    <div>\r\n      {props.isAuth\r\n        ? <div onClick={props.logout} className={s.bottom}>{props.id}</div>\r\n        : <NavLink to={'/login'} className={s.bottom}>Login</NavLink>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginBlock","import React from 'react';\r\nimport LoginBlock from \"./LoginBlock\";\r\nimport {connect} from 'react-redux';\r\nimport {logout} from \"../../../../redux/authReducer\";\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\n\r\n\r\ntype MSTPType = {\r\n  id: string | undefined\r\n  isAuth: boolean\r\n}\r\n\r\ntype MDTPType = {\r\n  logout: () => void\r\n}\r\n\r\nexport type LoginBlockPropsType = MSTPType & MDTPType\r\n\r\nconst mapStateToProps = (state: AppStateType): MSTPType => {\r\n  return {\r\n    id: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nlet MDTP: MDTPType = {\r\n  logout\r\n}\r\n\r\nclass LoginBlockContainer extends React.Component<LoginBlockPropsType> {\r\n\r\n  render() {\r\n    return (\r\n      <LoginBlock\r\n        id={this.props.id}\r\n        isAuth={this.props.isAuth}\r\n        logout={this.props.logout}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, MDTP)(LoginBlockContainer)","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from \"./logo.png\";\r\nimport s from './Center.module.css';\r\nimport LoginBlockContainer from \"./LoginBlock/LoginBlockContainer\";\r\n\r\n\r\nconst Center = () => {\r\n    return (\r\n        <nav>\r\n            <div className={s.center}>\r\n                <img src={logo}/>\r\n                <a className={s.search}>SOCNETWORK 96</a>\r\n                <a className={s.empty}> </a>\r\n\r\n                <NavLink to=\"/users\" className={`${s.users} ${s.bottom}`}>Users</NavLink>\r\n                <NavLink to=\"/profile\" className={`${s.profile} ${s.bottom}`}>Profile</NavLink>\r\n                <NavLink to=\"/dialogs\" className={`${s.dialogs} ${s.bottom}`}>Dialogs</NavLink>\r\n                <NavLink to=\"/feed\" className={`${s.feed} ${s.bottom}`}>Feed</NavLink>\r\n                <NavLink to=\"/settings\" className={`${s.settings} ${s.bottom}`}>Settings</NavLink>\r\n\r\n                <a className={s.colum}> </a>\r\n                <LoginBlockContainer/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Center;","import React from 'react';\r\nimport Center from \"./Center/Center\"\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.head_wrap}>\r\n            <div className={s.left}></div>\r\n            <Center/>\r\n            <div className={s.right}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={s.footer}>\r\n            Footer;\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\n\r\nexport const withSuspense = (Component: ComponentType) => {\r\n  return (props: any) => {\r\n    return <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props}/>\r\n    </React.Suspense>\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Route} from \"react-router-dom\";\r\nimport s from './Content.module.css';\r\nimport Footer from \"./Footer/Footer\"\r\nimport {withSuspense} from \"./common/hoc/WithSuspenseHOC\";\r\n\r\n/*\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\nimport DialogsContainer from \"./Dialogs/DialogsContainer\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport Posts from \"./Posts/Posts\"\r\nimport Login from \"./Login/Login\";\r\n*/\r\n\r\nconst ProfileContainer = React.lazy(() => import (\"./Profile/ProfileContainer\"))\r\nconst DialogsContainer = React.lazy(() => import (\"./Dialogs/DialogsContainer\"))\r\nconst UsersContainer = React.lazy(() => import (\"./Users/UsersContainer\"))\r\nconst Messages = React.lazy(() => import (\"./Messages/Messages\"))\r\nconst Posts = React.lazy(() => import (\"./Posts/Posts\"))\r\nconst Login = React.lazy(() => import (\"./Login/Login\"))\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div className={s.content_wrap}>\r\n      <div className={s.top_left}>\r\n        <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\r\n        <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\r\n      </div>\r\n      <div className={s.top_center}>\r\n        <Route path=\"/profile\" render={withSuspense(Posts)}/>\r\n        <Route path=\"/dialogs\" render={withSuspense(Messages)}/>\r\n        <Route path=\"/users\" render={withSuspense(UsersContainer)}/>\r\n        <Route path=\"/login\" render={withSuspense(Login)}/>\r\n      </div>\r\n      <div className={s.bottom_left}>\r\n        <Footer/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport s from './App.module.css';\r\nimport Header from \"./components/Header/Header\"\r\nimport Content from \"./components/Content/Content\"\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"./redux/redux-store\";\r\nimport {compose} from 'redux';\r\nimport {initializeTC} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/Content/common/preloader/Preloader\";\r\n\r\ntype MSTPType = {\r\n  initialized: boolean\r\n}\r\n\r\ntype MDTPType = {\r\n  initializeTC: (isInitialized: boolean) => void;\r\n}\r\n\r\nexport type AppPropsType = MSTPType & MDTPType\r\n\r\nconst MSTP = (state: AppStateType): MSTPType => {\r\n  return {\r\n    initialized: state.app.initialized\r\n  }\r\n}\r\n\r\nconst MDTP: MDTPType = {\r\n  initializeTC,\r\n}\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n  componentDidMount() {\r\n    this.props.initializeTC(true);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <Content/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(MSTP, MDTP)\r\n)(App)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </HashRouter>, document.getElementById('root')\r\n)\r\n","//типы для редьюеров\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\nexport const setAuthUserDataAC = (userId: string | undefined, login: string | null, email: string | null, isAuth: boolean) => {\r\n  return {\r\n    type: \"AUTH/SET_USER_DATA\",\r\n    payload: {userId, login, email, isAuth}\r\n  } as const\r\n}\r\n\r\nexport type setAuthUserDataAT = ReturnType<typeof setAuthUserDataAC>\r\n\r\nexport type ActionTypes = setAuthUserDataAT\r\n\r\n//типизируем стейт\r\nexport type initialStateType = {\r\n  userId: string | undefined\r\n  login: string | null\r\n  email: string | null\r\n  isAuth: boolean\r\n  isFetching: boolean\r\n}\r\n\r\n//инициализируем стейт с данными\r\nlet initialState: initialStateType = {\r\n  userId: undefined,\r\n  login: null,\r\n  email: null,\r\n  isAuth: false,\r\n  isFetching: false\r\n}\r\n\r\n//dialogsReducer\r\nconst authReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n  switch (action.type) {\r\n    case \"AUTH/SET_USER_DATA\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//thunk\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n\r\n  let response = await authAPI.me();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let {id, login, email} = response.data.data;\r\n    dispatch(setAuthUserDataAC(id, login, email, true));\r\n  }\r\n}\r\n\r\n//thunk\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n\r\n  let response = await authAPI.login(email, password, rememberMe)\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    if (response.data.messages.length > 0) {\r\n      dispatch(stopSubmit('login', {_error: response.data.messages[0]}))\r\n    } else {\r\n      dispatch(stopSubmit('login', {_error: 'some error'}))\r\n    }\r\n  }\r\n\r\n}\r\n\r\n//thunk\r\nexport const logout = () => async (dispatch: any) => {\r\n  let response = await authAPI.logout()\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserDataAC(undefined, null, null, false));\r\n  }\r\n\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrap\":\"Content_content_wrap__Kn6n2\",\"top_left\":\"Content_top_left__2uuqt\",\"bottom_left\":\"Content_bottom_left__3GXsW\",\"top_center\":\"Content_top_center__2N_jg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head_wrap\":\"Header_head_wrap__km_0R\",\"left\":\"Header_left__hL2OA\",\"right\":\"Header_right__2SPzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"LoginBlock_settings__3c8fJ\",\"bottom\":\"LoginBlock_bottom__1VoOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__3AVYK\",\"preloader\":\"Preloader_preloader__3Y4Gy\"};","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport const addPostAC = () => {\r\n  return {type: 'PROFILE/ADD-POST'} as const\r\n}\r\n\r\nexport const addPostFormAC = (newPostText: string) => {\r\n  return {type: 'PROFILE/ADD-POST-FORM', newPostText} as const\r\n}\r\n\r\nexport const updateNewPostTextAC = (newText: string) => {\r\n  return {type: 'PROFILE/UPDATE-NEW-POST-TEXT', newText} as const\r\n}\r\n\r\nexport const setUserProfileAC = (profile: any) => {\r\n  return {type: 'PROFILE/SET-USER-PROFILE', profile} as const\r\n}\r\n\r\nexport const setStatusAC = (status: string) => {\r\n  return {type: 'PROFILE/SET-STATUS', status} as const\r\n}\r\n\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => {\r\n  return {type: 'PROFILE/TOGGLE-IS-FETCHING', isFetching: isFetching} as const\r\n}\r\n\r\nexport const deletePostAC = (id: string) => {\r\n  return {type: 'PROFILE/DELETE-POST', id} as const\r\n}\r\n\r\nexport const savePhotoSuccessAC = (photos: photosType) => {\r\n  return {type: 'PROFILE/SET-PHOTO-SUCCESS', photos} as const\r\n}\r\n\r\nexport type addPostAT = ReturnType<typeof addPostAC>\r\nexport type updateNewPostTextAT = ReturnType<typeof updateNewPostTextAC>\r\nexport type setUserProfileAT = ReturnType<typeof setUserProfileAC>\r\nexport type toggleIsFetchingAT = ReturnType<typeof toggleIsFetchingAC>\r\nexport type setStatusAT = ReturnType<typeof setStatusAC>\r\nexport type addPostFormAT = ReturnType<typeof addPostFormAC>\r\nexport type deletePostAT = ReturnType<typeof deletePostAC>\r\nexport type savePhotoSuccessAT = ReturnType<typeof savePhotoSuccessAC>\r\n\r\nexport type ActionTypes = addPostAT\r\n  | updateNewPostTextAT\r\n  | setUserProfileAT\r\n  | toggleIsFetchingAT\r\n  | setStatusAT\r\n  | addPostFormAT\r\n  | deletePostAT\r\n  | savePhotoSuccessAT\r\n\r\n//типизируем массив постов\r\nexport type PostsDataArray = {\r\n  id: string\r\n  name: string\r\n  post: string\r\n  likesCount: number\r\n}\r\n//типизируем стейт\r\nexport type contactsType = {\r\n  facebook: string | null\r\n  website: string | null\r\n  vk: string | null\r\n  twitter: string | null\r\n  instagram: string | null\r\n  youtube: string | null\r\n  github: string | null\r\n  mainLink: string | null\r\n}\r\nexport type photosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\nexport type profileType = {\r\n  aboutMe: string | null\r\n  contacts: contactsType\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string | null\r\n  fullName: string | null\r\n  userId: number\r\n  photos: photosType\r\n}\r\nexport type initialStateType = {\r\n  postsData: Array<PostsDataArray>\r\n  newPostText: string\r\n  profile: profileType\r\n  isFetching: boolean\r\n  status: string\r\n}\r\n\r\n//инициализируем стейт с данными\r\nconst initialState: initialStateType = {\r\n  postsData: [\r\n    {id: v1(), name: 'VALERA', post: 'HERLfdE', likesCount: 43},\r\n    {id: v1(), name: 'Dimon', post: 'HERdsfLfdE', likesCount: 421},\r\n    {id: v1(), name: 'Kukareku', post: 'HEfsdfRLfdE', likesCount: 13},\r\n    {id: v1(), name: 'Stop', post: 'qweHERLfdE', likesCount: 5},\r\n  ],\r\n  newPostText: '',\r\n  profile: {\r\n    aboutMe: 'aboutMe',\r\n    contacts: {\r\n      facebook: 'facebook',\r\n      website: 'website',\r\n      vk: 'vk',\r\n      twitter: 'twitter',\r\n      instagram: 'instagram',\r\n      youtube: 'youtube',\r\n      github: 'github',\r\n      mainLink: 'mainLink'\r\n    },\r\n    lookingForAJob: true,\r\n    lookingForAJobDescription: 'lookingForAJobDescription',\r\n    fullName: 'fullName',\r\n    userId: 0,\r\n    photos: {\r\n      small: \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\r\n      large: \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\r\n    }\r\n  },\r\n  isFetching: false,\r\n  status: ''\r\n}\r\n\r\n//profileReducer\r\nconst profileReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n  switch (action.type) {\r\n\r\n    case 'PROFILE/ADD-POST': {\r\n      //создаем новый объект поста\r\n      const newPost: PostsDataArray = {\r\n        id: v1(),\r\n        name: 'name',\r\n        post: state.newPostText,\r\n        likesCount: 0\r\n      }\r\n      //делаем глубокую копию объекта стейт и ретурним ее\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost], //делаем глубокую копию сообщений и в конец добавляем новой пост\r\n        newPostText: ''\r\n      }\r\n    }\r\n\r\n    case 'PROFILE/ADD-POST-FORM': {\r\n      //создаем новый объект поста\r\n      const newPost: PostsDataArray = {\r\n        id: v1(),\r\n        name: 'name',\r\n        post: action.newPostText,\r\n        likesCount: 0\r\n      }\r\n      //делаем глубокую копию объекта стейт и ретурним ее\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost], //делаем глубокую копию сообщений и в конец добавляем новой пост\r\n        newPostText: ''\r\n      }\r\n    }\r\n\r\n    case 'PROFILE/UPDATE-NEW-POST-TEXT': {\r\n      //делаем копию стейта и вносим изменение обновление строки ввода нового поста и ретурним ее\r\n      return {\r\n        ...state,\r\n        newPostText: action.newText\r\n      }\r\n    }\r\n\r\n    case 'PROFILE/SET-USER-PROFILE': {\r\n      return {...state, profile: action.profile}\r\n    }\r\n\r\n    case 'PROFILE/TOGGLE-IS-FETCHING': {\r\n      return {...state, isFetching: action.isFetching}\r\n    }\r\n\r\n    case 'PROFILE/SET-STATUS': {\r\n      return {...state, status: action.status}\r\n    }\r\n\r\n    case 'PROFILE/DELETE-POST': {\r\n      return {\r\n        ...state,\r\n        postsData: state.postsData.filter(p => p.id != action.id)\r\n      }\r\n    }\r\n\r\n    case 'PROFILE/SET-PHOTO-SUCCESS': {\r\n      return {\r\n        ...state,\r\n        profile: {...state.profile, photos: action.photos}\r\n      }\r\n    }\r\n\r\n    default: {\r\n      //возращение стейта по дефолту если нет нужного типа\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n//thunk\r\nexport const getUserProfileTC = (userId: string | undefined) => async (dispatch: any) => {\r\n  dispatch(toggleIsFetchingAC(true));\r\n\r\n  let response = await profileAPI.getProfile(userId)\r\n\r\n  dispatch(toggleIsFetchingAC(false));\r\n  dispatch(setUserProfileAC(response.data));\r\n\r\n}\r\n\r\n//thunk\r\nexport const getStatusTC = (userId: string | undefined) => async (dispatch: any) => {\r\n\r\n  let response = await profileAPI.getStatus(userId)\r\n\r\n  dispatch(setStatusAC(response.data));\r\n\r\n}\r\n\r\n//thunk\r\nexport const updateStatusTC = (userId: string | undefined, status: string) => async (dispatch: any) => {\r\n  let response = await profileAPI.updateStatus(status)\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatusAC(response.data));\r\n  }\r\n}\r\n\r\nexport const savePhotoTC = (file: any) => async (dispatch: any) => {\r\n  let response = await profileAPI.savePhoto(file)\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccessAC(response.data.data.photos));\r\n  }\r\n}\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/preloaderNew.67f57325.svg\";","import React from 'react';\r\nimport preloader from \"../../../../assets/preloader.svg\";\r\nimport preloaderNew from \"../../../../assets/preloaderNew.svg\";\r\nimport s from \"./Preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.main}>\r\n            <img src={preloaderNew} className={s.preloader} alt='preloaderNew'/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader","import {v1} from \"uuid\";\r\n\r\nexport const addMessageAC = () => {\r\n  return {type: 'DIALOGS/ADD-MESSAGE'} as const\r\n}\r\n\r\nexport const addMessageFormAC = (newMessageText: string) => {\r\n  return {type: 'DIALOGS/ADD-MESSAGE-FORM', newMessageText} as const\r\n}\r\n\r\nexport const updateNewMessageTextAC = (newText: string) => {\r\n  return {type: 'DIALOGS/UPDATE-NEW-MESSAGE-TEXT', newText} as const\r\n}\r\n\r\nexport type addMessageAT = ReturnType<typeof addMessageAC>\r\nexport type addMessageFormAT = ReturnType<typeof addMessageFormAC>\r\nexport type updateNewMessageTextAT = ReturnType<typeof updateNewMessageTextAC>\r\n\r\nexport type ActionTypes = addMessageAT\r\n  | addMessageFormAT\r\n  | updateNewMessageTextAT\r\n\r\n\r\n//типизируем масив диалогов\r\nexport type DialogsDataArray = {\r\n  id: string\r\n  name: string\r\n}\r\n\r\n//типизируем масив сообщений\r\nexport type MessagesDataArray = {\r\n  id: string\r\n  message: string\r\n}\r\n\r\n//типизируем стейт\r\nexport type initialStateType = {\r\n  dialogsData: Array<DialogsDataArray>\r\n  messagesData: Array<MessagesDataArray>\r\n  newMessageText: string\r\n}\r\n\r\n//инициализируем стейт с данными\r\nlet initialState: initialStateType = {\r\n  dialogsData: [\r\n    {id: v1(), name: 'Dima'},\r\n    {id: v1(), name: 'Masha'},\r\n    {id: v1(), name: 'Pasha'},\r\n    {id: v1(), name: 'Dasha'},\r\n    {id: v1(), name: 'Sveta'},\r\n    {id: v1(), name: 'SANEK12'},\r\n  ],\r\n  messagesData: [\r\n    {id: v1(), message: 'HERLE1'},\r\n    {id: v1(), message: 'MASHA'},\r\n    {id: v1(), message: 'VALERCHI PRIYOM'},\r\n    {id: v1(), message: 'SUCHARA'},\r\n    {id: v1(), message: 'fdsfdf5435s erwtgaa'},\r\n    {id: v1(), message: 'eFGSGA DSFDSGA'},\r\n  ],\r\n  newMessageText: ''\r\n}\r\n\r\n//dialogsReducer\r\nconst dialogsReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n  switch (action.type) {\r\n    case 'DIALOGS/ADD-MESSAGE': {\r\n\r\n      //создаем новый объект сообщения\r\n      const newMessage: MessagesDataArray = {\r\n        id: v1(),\r\n        message: state.newMessageText\r\n      }\r\n\r\n      //делаем глубокую копию объекта стейт и ретурним ее\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, newMessage], //делаем глубокую копию сообщений и в конец добавляем новое сообщение\r\n        newMessageText: ''\r\n      }\r\n    }\r\n\r\n    case 'DIALOGS/ADD-MESSAGE-FORM': {\r\n      const newMessage: MessagesDataArray = {\r\n        id: v1(),\r\n        message: action.newMessageText\r\n      }\r\n\r\n      //делаем глубокую копию объекта стейт и ретурним ее\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, newMessage], //делаем глубокую копию сообщений и в конец добавляем новое сообщение\r\n        newMessageText: ''\r\n      }\r\n    }\r\n\r\n    case 'DIALOGS/UPDATE-NEW-MESSAGE-TEXT': {\r\n\r\n      //делаем копию стейта и вносим изменение обновление строки ввода нового сообщения и ретурним ее\r\n      return {\r\n        ...state,\r\n        newMessageText: action.newText\r\n      }\r\n    }\r\n    default: {\r\n      //возращение стейта по дефолту если нет нужного типа\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default dialogsReducer;","/*\r\nstate.usersData.map(u => u.id === action.userID ? {\r\n  ...u,\r\n  followed: true\r\n} : u)*/\r\n\r\nimport {UsersDataArray} from \"../redux/usersReducer\";\r\n\r\nexport const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n  return items.map((u: any) => {\r\n    if (u[objPropName] === itemId) {\r\n      return {...u, ...newObjProps}\r\n    }\r\n    return u\r\n  })\r\n}\r\n\r\n\r\n\r\n","//типы для редьюеров\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectsHelpers\";\r\n\r\nexport const followSuccessAC = (userID: number) => {\r\n  return {type: 'USERS/FOLLOW', userID} as const\r\n}\r\n\r\nexport const unfollowSuccessAC = (userID: number) => {\r\n  return {type: 'USERS/UNFOLLOW', userID} as const\r\n}\r\n\r\nexport const setUsersAC = (usersData: Array<UsersDataArray>) => {\r\n  return {type: 'USERS/SET_USERS', usersData} as const\r\n}\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n  return {type: 'USERS/SET_CURRENT_PAGE', currentPage} as const\r\n}\r\n\r\nexport const setTotalUsersCountAC = (totalUsersCount: number) => {\r\n  return {type: 'USERS/SET_TOTAL_USERS_COUNT', totalUsersCount} as const\r\n}\r\n\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => {\r\n  return {type: 'USERS/TOGGLE_IS_FETCHING', isFetching} as const\r\n}\r\n\r\nexport const toggleFollowingProgressAC = (followingProgress: boolean, userId: number) => {\r\n  return {\r\n    type: 'USERS/TOGGLE_FOLLOWING_PROGRESS',\r\n    followingProgress,\r\n    userId\r\n  } as const\r\n}\r\n\r\nexport type followSuccessAT = ReturnType<typeof followSuccessAC>\r\nexport type unfollowSuccessAT = ReturnType<typeof unfollowSuccessAC>\r\nexport type setUsersAT = ReturnType<typeof setUsersAC>\r\nexport type setCurrentPageAT = ReturnType<typeof setCurrentPageAC>\r\nexport type setTotalUsersCountAT = ReturnType<typeof setTotalUsersCountAC>\r\nexport type toggleIsFetchingAT = ReturnType<typeof toggleIsFetchingAC>\r\nexport type toggleFollowingProgressAT = ReturnType<typeof toggleFollowingProgressAC>\r\n\r\nexport type ActionTypes = followSuccessAT\r\n  | unfollowSuccessAT\r\n  | setUsersAT\r\n  | setCurrentPageAT\r\n  | setTotalUsersCountAT\r\n  | toggleIsFetchingAT\r\n  | toggleFollowingProgressAT\r\n\r\n\r\n//типизируем объект фото\r\nexport type photosType = {\r\n  small: null | string\r\n  large: null | string\r\n}\r\n\r\n//типизируем массив юзеров\r\nexport type UsersDataArray = {\r\n  name: string\r\n  id: number\r\n  uniqueUrlName: null\r\n  photos: photosType\r\n  status: null\r\n  followed: boolean\r\n}\r\n\r\n//типизируем стейт\r\nexport type initialStateType = {\r\n  usersData: Array<UsersDataArray>,\r\n  pageSize: number,\r\n  totalUsersCount: number,\r\n  currentPage: number,\r\n  isFetching: boolean,\r\n  followingProgress: Array<number>\r\n}\r\n\r\n//инициализируем стейт с данными\r\nconst initialState: initialStateType = {\r\n  usersData: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingProgress: []\r\n}\r\n\r\n//userReducer\r\nconst usersReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n  switch (action.type) {\r\n    case 'USERS/FOLLOW': {\r\n      return {\r\n        ...state,\r\n        usersData: updateObjectInArray(state.usersData, action.userID, 'id', {followed: true})\r\n\r\n        /*usersData: state.usersData.map(u => u.id === action.userID ? {\r\n          ...u,\r\n          followed: true\r\n        } : u)*/\r\n      } //делаем копию стейта и копируем массив юзеров по средствам мап\r\n      // (мап возвращает копию масива и мап меняет значение параметра фоловед и ретурним ее\r\n    }\r\n    case 'USERS/UNFOLLOW': {\r\n      return {\r\n        ...state,\r\n        usersData: updateObjectInArray(state.usersData, action.userID, 'id', {followed: false})\r\n\r\n\r\n        /*usersData: state.usersData.map(u => u.id === action.userID ? {\r\n          ...u,\r\n          followed: false\r\n        } : u)*/\r\n      } //делаем копию стейта и копируем массив юзеров по средствам мап\r\n      // (мап возвращает копию масива и мап меняет значение параметра фоловед и ретурним ее\r\n    }\r\n    case 'USERS/SET_USERS': {\r\n      return {...state, usersData: action.usersData} //делаем глубокую копию существущего стейта\r\n      //по изначальной задумке там должно быть пусто и передаем туда массив юзеров которые должны прийти с сервера\r\n    }\r\n    case 'USERS/SET_CURRENT_PAGE': {\r\n      return {...state, currentPage: action.currentPage}\r\n      //создаем копию стейта и закидываем значение текущей выбранной страницы которая пришла через экнш\r\n    }\r\n    case 'USERS/SET_TOTAL_USERS_COUNT': {\r\n      return {...state, totalUsersCount: action.totalUsersCount}\r\n      //создаем копию стейта и закидываем значение общего числа юзеров которые пришли через экнш\r\n    }\r\n    case 'USERS/TOGGLE_IS_FETCHING': {\r\n      return {...state, isFetching: action.isFetching}\r\n    }\r\n    case 'USERS/TOGGLE_FOLLOWING_PROGRESS': {\r\n      return {\r\n        ...state,\r\n        followingProgress: action.followingProgress\r\n          ? [...state.followingProgress, action.userId]\r\n          : state.followingProgress.filter(id => id != action.userId)\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//thunk\r\nexport const getUsersTC = (currentPage: number, pageSize: number) => async (dispatch: any) => {\r\n  dispatch(toggleIsFetchingAC(true));\r\n\r\n  let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n  dispatch(toggleIsFetchingAC(false));\r\n  dispatch(setUsersAC(data.items));\r\n  dispatch(setTotalUsersCountAC(data.totalCount));\r\n}\r\n\r\n//vunos obchei logiki\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n  dispatch(toggleFollowingProgressAC(true, userId));\r\n\r\n  let response = await apiMethod(userId)\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n\r\n  dispatch(toggleFollowingProgressAC(false, userId));\r\n}\r\n\r\nexport const unfollowTC = (userId: number) => async (dispatch: any) => {\r\n  followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(userId), unfollowSuccessAC)\r\n}\r\n\r\nexport const followTC = (userId: number) => async (dispatch: any) => {\r\n  followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccessAC)\r\n}\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3e76Q\"};"],"sourceRoot":""}